# frozen_string_literal: true

<% if module_name -%>
module <%= module_name %>
  class <%= model_name.camelize %> < ApplicationRecord
<% else -%>
class <%= model_name.camelize %> < ApplicationRecord
<% end -%>
  include UuidPrimaryKey
  acts_as_tenant(:academy)

  # Associations
  belongs_to :academy

  # Validations
<% attributes.each do |attr| -%>
<% if attr[:name] == 'name' -%>
  validates :name, presence: true, length: { maximum: 255 }
<% elsif attr[:type] == 'boolean' -%>
  validates :<%= attr[:name] %>, inclusion: { in: [true, false] }
<% elsif attr[:type] == 'text' -%>
  validates :<%= attr[:name] %>, length: { maximum: 1000 }
<% elsif attr[:type] == 'string' -%>
  validates :<%= attr[:name] %>, presence: true, length: { maximum: 255 }
<% end -%>
<% end -%>

  # Scopes
  scope :active, -> { where(is_active: true) }
  scope :inactive, -> { where(is_active: false) }

  # Methods
  def display_name
    name
  end
<% if module_name -%>
  end
end
<% else -%>
end
<% end -%>